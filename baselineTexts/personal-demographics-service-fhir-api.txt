Personal Demographics Service - FHIR API

Access the Personal Demographics Service (PDS) - the national electronic database of NHS patient details such as name, address, date of birth, related people, registered GP and NHS number.

Page content
Top of page
Overview
Who can use this API
Related APIs
API status and roadmap
Service level
Technology
Network access
Security and authorisation
Environments and testing
Onboarding
Endpoints
Get patient details
Get a patient's related people
Search for a patient
Update patient details
Overview

Use this API to access the Personal Demographics Service (PDS) - the national electronic database of NHS patient details such as name, address, date of birth, related people, registered GP and NHS number.

You can:

search for patients
get patient details
update patient details
verify an NHS number for a patient

You cannot currently use this API to:

create a new record for a birth
receive birth notifications
create a record for a new patient
register a new patient at a GP Practice - instead, use NHAIS GP Links API

You can read and update the following data:

NHS number (read only)
name
gender
addresses and contact details
birth information
death information
registered GP
nominated pharmacy
dispensing doctor pharmacy
medical appliance supplier pharmacy
related people, such as next of kin (read only - update coming soon)
Patients included in PDS

Regardless of nationality, or where they live now, PDS includes all patients who have ever been registered with a GP practice, or treated by a health or care organisation (even as a visitor or migrant) in England, Wales, the Isle of Man, or in a UK Defence Medical Services unit anywhere in the world.

All patients in PDS have an NHS number which is unique. The 10-digit NHS number is used in England, Wales, the Isle of Man, Scotland and Northern Ireland, but not the Channel Islands. Scotland and Northern Ireland have their own distinct number ranges.

Access modes

This API has three access modes:

Access mode	End user authentication	Functions	Availability
Application-restricted access	None	Search for a patient (single result). Get patient details.	Available in production (stable)
Healthcare worker access	NHS Care Identity Service 2 (NHS CIS2) using NHS smartcard or modern alternative	Search for patients (multiple results). Get patient details. Update patient details.	Available in production (beta)
Patient access	NHS login	Get own details. Update own details (limited).	Available in integration environment (alpha)
Who can use this API

This API can only be used where there is a legal basis to do so. Make sure you have a valid use case before you go too far with your development. To do this, make a PDS access request.

You must do this before you can go live (see ‘Onboarding’ below).

Who can access PDS records

Health and care organisations in England and the Isle of Man can access PDS records. Legitimate direct care examples include NHS organisations delivering healthcare, local authorities delivering care, third sector and private sector health and care organisations, and developers delivering systems to health and care organisations.

Health and care organisations in Wales access their own version of PDS called the Welsh Demographics Service (WDS) which is connected to PDS behind the scenes.

Health and care organisations in Scotland, Northern Ireland and the Channel Islands access their own equivalents of PDS.

Patients who receive health and social care or make use of NHS services in England, Wales, the Isle of Man, Scotland, Northern Ireland and the Channel Islands.

Related APIs

The following APIs also give access to the Personal Demographics Service:

Personal Demographics Service (SMSP) API - this API is now deprecated.
Personal Demographics Service (HL7 V3) API - use this if you want to use functions that are not yet available on the FHIR API.

Once our roadmap is complete, the above APIs will become redundant.

The following APIs are also related to this API:

Personal Demographics Service Notifications - FHIR API - use this to subscribe to be notified of a limited set of patient record changes, such as birth, death, change of address and change of GP. If you would like to see this list expanded, please tell us about your use case and vote here
Organisation Data Service FHIR API - use this to get full details for the organisations related to the patient, such as their registered GP or nominated pharmacy.
API status and roadmap
Application-restricted access

This access mode is stable:

you should strongly consider it as the primary choice for PDS integration
we do not make routine breaking changes, if it cannot be avoided, for example, for security reasons, we will give advance notice
Healthcare worker access

This access mode is in beta, meaning:

it is available in production
we might make breaking changes, but only if we cannot avoid it, and we will give advance notice
Patient access

This access mode is in alpha, meaning:

it is available for testing in the integration environment, but not for production use
we might make breaking changes, but only if we cannot avoid it, and we will give advance notice
Roadmap

To see our roadmap, or to suggest, comment or vote on features for this API, see our interactive product backlog.

If you have any other queries, please contact us.

Service level

This API is a platinum service, meaning it is operational and supported 24 x 7 x 365.

For more details, see service levels.

Technology

This API is RESTful.

It also conforms to the FHIR global standard for health care data exchange. Specifically, it is aligned with FHIR UK Core, which is built on FHIR Release 4.

You do not need to know much about FHIR to use this API - FHIR APIs are just RESTful APIs that follow specific rules. In particular:

resource names are capitalised and singular, for example /Patient not /patients
array names are singular, for example line not lines for address lines
data items that are country-specific and thus not included in the FHIR global base resources are usually wrapped in an extension object

There are libraries and SDKs available to help with FHIR API integration.

Network access

This API is available on the internet and, indirectly, on the Health and Social Care Network (HSCN).

To use this API with NHS smartcards you do need an HSCN connection, although internet-facing alternatives are available.

For more details see Network access for APIs.

Security and authorisation

Refer the table below to understand the recommended security pattern. The suggestions are based on who the users is, the functionality that they can access, authentication methods and ease of integration and onboarding.

User	Functions	User authentication	Ease of integration and onboarding	OAuth 2.0 flow and client authentication	Recommended security pattern
Any or not present	Search for a patient (single result). Get patient details.	Not needed	Easiest	Client credentials with signed JWT	Application restricted
Healthcare worker (except GP software user)	Search for patients (multiple results). Get patient details. Update patient details.	NHS CIS2 - smartcards or modern alternatives	Easier	Authorisation code with API key and secret	NHS CIS2 - combined authentication and authorisation
Healthcare worker (including GP software user)	Search for patients (multiple results). Get patient details. Update patient details.	NHS CIS2 - smartcards or modern alternatives	Easy	Token exchange with signed JWT	NHS CIS2 - separate authentication and authorisation
Patient	Get own details. Update own details (limited).	NHS login	Easier	Authorisation code with API key and secret	NHS login - combined authentication and authorisation
Patient	Get own details. Update own details (limited).	NHS login	Easy	Token exchange with signed JWT	NHS login - separate authentication and authorisation
Application-restricted access

This access mode is application-restricted, meaning we authenticate the calling application but not the end user.

You can use this access mode as follows:

unattended (end user not present), for example as part of a back end process to check NHS numbers for data flowing from one system to another
attended (end user present) - in which case, you must ensure the end user is authenticated and suitably authorised locally by the calling application

To use this access mode, use the following security pattern:

Application-restricted RESTful API - signed JWT authentication
Healthcare worker access

This access mode is user-restricted, meaning an end user must be present, authenticated and authorised.

The end user must be:

a healthcare worker
strongly authenticated, using either an NHS smartcard or a modern alternative
authorised, using national role-based access control (RBAC)

To use this access mode, use one of the following security patterns:

user-restricted RESTful API - using NHS CIS2 - combined authentication and authorisation
user-restricted RESTful API - using NHS CIS2 - separate authentication and authorisation
Patient access

This access mode is user-restricted, meaning an end user must be present, authenticated and authorised.

The end user must be:

a patient who receives health and social care or makes use of NHS services
strongly authenticated, using NHS login

To use this access mode, use one of the following security patterns:

user-restricted RESTful APIs - using NHS login - combined authentication and authorisation
user-restricted RESTful APIs - using NHS login - separate authentication and authorisation
Environments and testing
Environment	Base URL
Sandbox	https://sandbox.api.service.nhs.uk/personal-demographics/FHIR/R4/
Integration test	https://int.api.service.nhs.uk/personal-demographics/FHIR/R4/
Production	https://api.service.nhs.uk/personal-demographics/FHIR/R4/
Sandbox testing

Our sandbox environment:

is for early developer testing
only covers a limited set of scenarios
is stateless, so does not actually persist any updates
is open access, so does not allow you to test authorisation

For details of sandbox test scenarios, or to try out the sandbox using our 'Try this API' feature, see the documentation for each endpoint.

Alternatively, you can try out the sandbox using our Postman collection:

Integration testing

Our integration test environment:

is for formal integration testing
is stateful, so persists updates
includes authorisation, with options for user-restricted access (with or without smartcards and application-restricted access

For read-only testing, you can either use our PDS FHIR API test data packs or set up your own test data.

To test updating patient details, you must set up your own test data.

For more details see integration testing with our RESTful APIs.

Production smoke testing

You must not use real patient data for smoke testing in the production environment.

Rather, use our production test patient.

Onboarding

You need to get your software approved by us before it can go live with this API. We call this onboarding. The onboarding process can sometimes be quite long, so it’s worth planning well ahead.

New applications - after 9 December 2021

This API uses our online digital onboarding process. As part of this process, you need to demonstrate your technical conformance to the requirements for this API. For more details, see PDS FHIR API technical conformance.

To get started, send us an email at api.management@nhs.net.

In progress applications

If your onboarding is already in progress, or we tell you that you're an exception, follow the Supplier Conformance Assessment List (SCAL) process.

When following the general SCAL process steps, for this API you must do the following:

In step 1, to confirm your use case, you need to make a PDS access request, even if you already access PDS via another method.

In step 2, when requesting the SCAL, tell us which access mode you're using:

healthcare worker search and retrieve
healthcare worker update
application-restricted
patient access

In step 2, if using healthcare worker access mode, tell us which security pattern you are using:

NHS CIS2 - combined authentication and authorisation
NHS CIS2 - separate authentication and authorisation

In step 2, if using patient access mode, tell us which security pattern you are using:

NHS login - combined authentication and authorisation - available only upon request
NHS login - separate authentication and authorisation

In step 6, when implementing your clinical risk management process, you must review and integrate the PDS FHIR API hazard log into your own risk log. It's embedded within the PDS FHIR API tab in the SCAL.

In step 8, you need to review and complete the PDS FHIR API risk log to show that you have understood and mitigated the various risks. You might be asked to provide some evidence to prove that controls have been put in place. You can find the risk log embedded within the PDS FHIR API tab in the SCAL. This is separate from the clinical safety hazard log mentioned above.

In step 9, you must conduct penetration testing to CHECK standards.

In step 10, when you complete the Service Desk Registration Form, send it to api.management@nhs.net.

In step 11, submit your completed SCAL to api.management@nhs.net.

In step 14, to request production access, contact us at api.management@nhs.net.

Endpoints
Get patient details
GET /Patient/{id}
Try this API
Overview

Use this endpoint to get patient details from PDS for a given NHS number.

You cannot get a patient's related people details, use the RelatedPerson endpoint instead.

Superseded patients

Some patients are marked as superseded, this means that for some reason the original resource is no longer valid and has been replaced with a different resource.

On retrieval of a superseded resource, the new resource is automatically returned in place of the requested resource. You can spot a superseded resource when the id is not the same as the one requested.

When retrieving a superseding resource you must update your system with the new resource and remove the superseded resource, ensuring that the same id does not exist against another resource in your system.

Restricted patients

Some patients are tagged as restricted and are sometimes known as sensitive patients. Restricted patients can be retrieved; however, location sensitive fields such as address, telecom and generalPractitioner are removed.

The restricted flag can be found in the data under meta/security on the patient resource.

Sandbox test scenarios

You can test the following scenarios in our sandbox environment:

Scenario	Request	Response
Patient exists	id=9000000009	HTTP Status 200 with patient data in response
Sensitive patient exists	id=9000000025	HTTP Status 200 with patient data in response with the restricted data removed
Patient exists with minimal data	id=9000000033	HTTP Status 200 with patient data in response, there will be very little data so can be used as an example of a patient with bad data quality
Patient does not exist	id=9111231130 (or any other valid NHS number)	HTTP Status 404 with problem description
Invalid NHS number	id=9000000000 (or any invalid NHS number)	HTTP Status 400 with problem description
Missing X-Request-ID	id=9000000009 (or any other valid NHS number)	HTTP Status 412 with problem description

You can try out the sandbox using the 'Try this API' feature on this page.

Alternatively, you can try out the sandbox using our Postman collection:

Request
Path parameters
Name	Description
id	

String

The patient's NHS number. The primary identifier of a patient, unique within NHS England and Wales. Always 10 digits and must be a valid NHS number.

Example: 9000000009

Required
Headers
Name	Description
Authorization	

String (^Bearer\ [[:ascii:]]+$)

An OAuth 2.0 bearer token.

Required in all environments except sandbox.

Example: Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM


NHSD-Session-URID	

String

The user role ID (URID) for the current session. Also known as a user role profile ID (URPID).

This header is optional.

In Application-restricted access mode this header is ignored.

In Healthcare worker access mode if you send this header it must be valid for the logged-in user. See determine the user's role for guidance.

Pattern: /^[0-9]+$/

Example: 555254240100


X-Request-ID	

String

A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.

Must be a universally unique identifier (UUID) (ideally version 4).

Mirrored back in a response header.

If you re-send a failed request, use the same value in this header.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068


X-Correlation-ID	

String

An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding . characters.

Mirrored back in a response header.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA

Response
HTTP status: 200

Information successfully returned.

Headers
Name	Description
ETag	

String

Record version identifier enclosed in quotes and preceded by 'W/'. For example, W/"2".

Corresponds to meta.versionId attribute in the patient resource body.

When you retrieve a patient resource, you get a version number for the resource (in the ETag response header and in the versionId field in the response). You must then pass the resource's version number in any update request (in the If-Match response header) made for the patient.

Pattern: /^W\/"[0-9]+"$/

Example: W/"2"


X-Correlation-Id	

String

The X-Correlation-ID from the request header, if supplied, mirrored back.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA


X-Request-Id	

String

The X-Request-ID from the request header, if supplied, mirrored back.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068

Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "Patient",
  "id" : "9000000009",
  "identifier" : [ {
    "system" : "https://fhir.nhs.uk/Id/nhs-number",
    "value" : "9000000009",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSNumberVerificationStatus",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-NHSNumberVerificationStatus",
          "version" : "1.0.0",
          "code" : "01",
          "display" : "Number present and verified"
        } ]
      }
    } ]
  } ],
  "meta" : {
    "versionId" : "2",
    "security" : [ {
      "system" : "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
      "code" : "U",
      "display" : "unrestricted"
    } ]
  },
  "name" : [ {
    "id" : "123",
    "use" : "usual",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "given" : [ "Jane" ],
    "family" : "Smith",
    "prefix" : [ "Mrs" ],
    "suffix" : [ "MBE" ]
  } ],
  "gender" : "female",
  "birthDate" : "2010-10-22",
  "multipleBirthInteger" : 1,
  "deceasedDateTime" : "2010-10-22T00:00:00+00:00",
  "generalPractitioner" : [ {
    "id" : "254406A3",
    "type" : "Organization",
    "identifier" : {
      "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
      "value" : "Y12345",
      "period" : {
        "start" : "2020-01-01",
        "end" : "2021-12-31"
      }
    }
  } ],
  "managingOrganization" : {
    "type" : "Organization",
    "identifier" : {
      "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
      "value" : "Y12345",
      "period" : {
        "start" : "2020-01-01",
        "end" : "2021-12-31"
      }
    }
  },
  "extension" : [ {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NominatedPharmacy",
    "valueReference" : {
      "identifier" : {
        "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
        "value" : "Y12345"
      }
    }
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-PreferredDispenserOrganization",
    "valueReference" : {
      "identifier" : {
        "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
        "value" : "Y23456"
      }
    }
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-MedicalApplianceSupplier",
    "valueReference" : {
      "identifier" : {
        "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
        "value" : "Y34567"
      }
    }
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus",
    "extension" : [ {
      "url" : "deathNotificationStatus",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-DeathNotificationStatus",
          "version" : "1.0.0",
          "code" : "2",
          "display" : "Formal - death notice received from Registrar of Deaths"
        } ]
      }
    }, {
      "url" : "systemEffectiveDate",
      "valueDateTime" : "2010-10-22T00:00:00+00:00"
    } ]
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSCommunication",
    "extension" : [ {
      "url" : "language",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-HumanLanguage",
          "version" : "1.0.0",
          "code" : "fr",
          "display" : "French"
        } ]
      }
    }, {
      "url" : "interpreterRequired",
      "valueBoolean" : true
    } ]
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-ContactPreference",
    "extension" : [ {
      "url" : "PreferredWrittenCommunicationFormat",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-PreferredWrittenCommunicationFormat",
          "code" : "12",
          "display" : "Braille"
        } ]
      }
    }, {
      "url" : "PreferredContactMethod",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-PreferredContactMethod",
          "code" : "1",
          "display" : "Letter"
        } ]
      }
    }, {
      "url" : "PreferredContactTimes",
      "valueString" : "Not after 7pm"
    } ]
  }, {
    "url" : "http://hl7.org/fhir/StructureDefinition/patient-birthPlace",
    "valueAddress" : {
      "city" : "Manchester",
      "district" : "Greater Manchester",
      "country" : "GBR"
    }
  } ],
  "telecom" : [ {
    "id" : "789",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "system" : "phone",
    "value" : "01632960587",
    "use" : "home"
  }, {
    "id" : "OC789",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "system" : "other",
    "value" : "01632960587",
    "use" : "home",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-OtherContactSystem",
      "valueCoding" : {
        "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-OtherContactSystem",
        "code" : "textphone",
        "display" : "Minicom (Textphone)"
      }
    } ]
  } ],
  "contact" : [ {
    "id" : "C123",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "relationship" : [ {
      "coding" : [ {
        "system" : "http://terminology.hl7.org/CodeSystem/v2-0131",
        "code" : "C",
        "display" : "Emergency Contact"
      } ]
    } ],
    "telecom" : [ {
      "system" : "phone",
      "value" : "01632960587"
    } ]
  } ],
  "address" : [ {
    "id" : "456",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "use" : "home",
    "line" : [ "1 Trevelyan Square", "Boar Lane", "City Centre", "Leeds", "West Yorkshire" ],
    "postalCode" : "LS1 6AE",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-AddressKey",
      "extension" : [ {
        "url" : "type",
        "valueCoding" : {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-AddressKeyType",
          "code" : "PAF"
        }
      }, {
        "url" : "value",
        "valueString" : "12345678"
      } ]
    } ]
  }, {
    "id" : "T456",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "use" : "temp",
    "text" : "Student Accommodation",
    "line" : [ "1 Trevelyan Square", "Boar Lane", "City Centre", "Leeds", "West Yorkshire" ],
    "postalCode" : "LS1 6AE",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-AddressKey",
      "extension" : [ {
        "url" : "type",
        "valueCoding" : {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-AddressKeyType",
          "code" : "PAF"
        }
      }, {
        "url" : "value",
        "valueString" : "12345678"
      } ]
    } ]
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

resourceType
string
	

FHIR resource type.

Default: Patient


id
string
required
	

The patient's NHS number. The primary identifier of a patient, unique within NHS England and Wales. Always 10 digits and must be a valid NHS number.

Pattern: ^\d{10}$
Example: 9000000009


identifier
array
	

Identifier and system of identification used for this Patient.



meta
object
	

Metadata about this resource.



name
array
	

List of names associated with the patient.

When a patient tagged as very restricted is retrieved, all names are removed from the response.

Min items: 1


gender
string
	

Classification of the gender of a patient. The classification is phenotypical rather than genotypical, i.e. it does not provide codes for medical or scientific purposes. It is the administrative gender that the patient wishes to be known as. In some cases, this may not be the same as the patient’s registered birth gender, or their current clinical gender.

Allowed values: male, female, other, unknown


birthDate
string date
	

The date on which the patient was born or is officially deemed to have been born.

It is a date in the format yyyy-mm-dd. Due to data quality issues on a small number of patients yyyy-mm and yyyy format may also be returned.

When a patient tagged as very restricted is retrieved, birth date is removed from the response.

Example: 2010-10-22


multipleBirthInteger
integer
	

The order in which the patient was born, with 1 indicating the first or only birth in the sequence, 2 indicating the second birth in the sequence, 3 indicating the third, and so on up to 7.

There are two other valid values; 8 meaning Not applicable and 9 meaning Not known.

Maximum: 9 (inclusive)
Minimum: 1 (inclusive)
Example: 1


deceasedDateTime
string date-time
	

The date and time on which a person died or is officially deemed to have died, if applicable and known.

It is a datetime in the format yyyy-mm-ddTHH:MM:SS+HH:MM or yyyy-mm-dd. Due to data quality issues on a small number of patients yyyy-mm and yyyy format may also be returned.

When a patient tagged as very restricted is retrieved, death date is removed from the response.

Pattern: ^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])T\d{2}:\d{2}:\d{2}\+\d{2}:\d{2})$|^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])T\d{2}:\d{2}:\d{2})$|^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])T\d{2}:\d{2}:\d{2}\+\d{2}:\d{2})$|^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))$
Example: 2010-10-22T00:00Z


address
array
	

List of addresses associated with the patient.

These are fully populated on a retrieval or a successful update, only the home address is returned on a search. When a patient tagged as restricted or very restricted is retrieved, all addresses are removed from the response.



telecom
array
	

List of contact points for the patient; for example, phone numbers or email addresses. When a patient tagged as restricted or very restricted is retrieved, all contact points are removed from the response.



contact
array
	

A list of patient contacts. Only emergency contacts are returned and only emergency contacts should be added. Any other contacts should be added to the patients Related Person. Patients designate here any contact number they desire to be used in case of an emergency. Note, while a patient may also desire to record various related persons telecom details, these do not separately allow for a concept of emergency contact; only ranking. See RelatedPerson endpoint. When a patient tagged as restricted or very restricted is retrieved, all contacts are removed from the response.



generalPractitioner
array
	

General Practice (not practitioner) with which the patient is, or was, registered. Always contains zero or one general practitioner object. When a patient tagged as restricted or very restricted is retrieved, the General Practice is removed from the response.

Max items: 1


managingOrganization
object
	

The managing organization of a de-registered patient.



extension
array
	

Wrapper array for the patient's pharmacies, death notification status, communication details, contact preferences and place of birth; these are all FHIR extensions. Always contains zero or one of each pharmacy object, zero or one death notification status object, zero or one communication details object, zero or one contact preference and zero or one place of birth object. When a patient tagged as restricted or very restricted is retrieved, the pharmacy and birth place extensions are removed from the response.

HTTP status: 4XX

An error occurred as follows:

HTTP status	Error code	Description
400	INVALID_RESOURCE_ID	Invalid NHS number.
400	UNSUPPORTED_SERVICE	Missing NHS number.
400	MISSING_VALUE	Missing header parameter. For details, see the diagnostics field.
400	INVALID_VALUE	Invalid header parameter. For details, see the diagnostics field.
401	ACCESS_DENIED	Access token missing, invalid or expired, or calling application not configured for this operation.
403	ACCESS_DENIED	Patient cannot perform this action.
404	RESOURCE_NOT_FOUND	Patient does not exist for given NHS number.
404	INVALIDATED_RESOURCE	Patient did exist for given NHS number, but has been invalidated and not superseded by another NHS number.
408	UNABLE_TO_CALL_SERVICE	The downstream domain processing has not completed within the configured timeout period.
429	TOO_MANY_REQUESTS	You have exceeded your application's rate limit.
Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "OperationOutcome",
  "issue" : [ {
    "severity" : "error",
    "code" : "structure",
    "details" : {
      "coding" : [ {
        "system" : "https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode",
        "version" : "1",
        "code" : "MISSING_VALUE",
        "display" : "Required value is missing"
      } ]
    },
    "diagnostics" : "Missing value - 'birth_date/birth_date_range_start/birth_date_range_end'"
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

Outcome of an operation that does not result in a resource or bundle being returned, for example an error or an async/batch submission. There are a number of possible error codes that can be returned along with a more detailed description in the display field.



resourceType
string
	

FHIR Resource Type.

Default: OperationOutcome


issue
array
	

List of issues that have occurred.

Min items: 1
Get a patient's related people
GET /Patient/{id}/RelatedPerson
Try this API
Overview

Use this endpoint to get a patient's related people details from PDS for a given NHS number. This is a list of people who can be contacted, and how, regarding the patient. These details may be useful for a practitioner to get in contact with a next of kin or guardian.

Restricted patients

Some patients are tagged as restricted and are sometimes known as sensitive patients. Related people are not returned for a restricted patient and an empty bundle is returned.

If a related person only contains a patient reference, and when the patient is retrieved, it is restricted; location sensitive fields such as address and telecom are removed.

Sandbox test scenarios

You can test the following scenarios in our sandbox environment:

Scenario	Request	Response
Multiple related people exists	id=9000000009	HTTP Status 200 with related person data in a response Bundle
Single related person exists	id=9000000017	HTTP Status 200 with related person data in a response Bundle
Related people do not exist	id=9000000025	HTTP Status 404 with problem description
Missing X-Request-ID	id=9000000009 (or any other valid NHS number)	HTTP Status 412 with problem description

You can try out the sandbox using the 'Try this API' feature on this page.

Alternatively, you can try out the sandbox using our Postman collection:

Request
Path parameters
Name	Description
id	

String

The patient's NHS number. The primary identifier of a patient, unique within NHS England and Wales. Always 10 digits and must be a valid NHS number.

Example: 9000000009

Required
Headers
Name	Description
Authorization	

String (^Bearer\ [[:ascii:]]+$)

An OAuth 2.0 bearer token.

Required in all environments except sandbox.

Example: Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM


NHSD-Session-URID	

String

The user role ID (URID) for the current session. Also known as a user role profile ID (URPID).

This header is optional.

In Application-restricted access mode this header is ignored.

In Healthcare worker access mode if you send this header it must be valid for the logged-in user. See determine the user's role for guidance.

Pattern: /^[0-9]+$/

Example: 555254240100


X-Request-ID	

String

A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.

Must be a universally unique identifier (UUID) (ideally version 4).

Mirrored back in a response header.

If you re-send a failed request, use the same value in this header.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068


X-Correlation-ID	

String

An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding . characters.

Mirrored back in a response header.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA

Response
HTTP status: 200

Information successfully returned.

Headers
Name	Description
ETag	

String

Record version identifier enclosed in quotes and preceded by 'W/'. For example, W/"2".

Corresponds to meta.versionId attribute in the patient resource body.

When you retrieve a patient resource, you get a version number for the resource (in the ETag response header and in the versionId field in the response). You must then pass the resource's version number in any update request (in the If-Match response header) made for the patient.

Pattern: /^W\/"[0-9]+"$/

Example: W/"2"


X-Correlation-Id	

String

The X-Correlation-ID from the request header, if supplied, mirrored back.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA


X-Request-Id	

String

The X-Request-ID from the request header, if supplied, mirrored back.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068

Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "Bundle",
  "type" : "searchset",
  "timestamp" : "2019-12-25T12:00:00+00:00",
  "total" : 1,
  "entry" : [ {
    "fullUrl" : "https://api.service.nhs.uk/personal-demographics/FHIR/R4/Patient/9000000009/RelatedPerson/507B7621",
    "resource" : {
      "id" : "507B7621",
      "resourceType" : "RelatedPerson",
      "patient" : {
        "type" : "Patient",
        "identifier" : {
          "system" : "https://api.service.nhs.uk/personal-demographics/FHIR/R4/Patient",
          "value" : "90000000009"
        },
        "reference" : "https://api.service.nhs.uk/personal-demographics/FHIR/R4/Patient/90000000009"
      },
      "active" : true,
      "period" : {
        "start" : "2020-01-01",
        "end" : "2021-12-31"
      },
      "name" : [ {
        "use" : "usual",
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "given" : [ "Jane" ],
        "family" : "Smith",
        "prefix" : [ "Mrs" ],
        "suffix" : [ "MBE" ]
      } ],
      "relationship" : [ {
        "coding" : [ {
          "system" : "https://fhir.nhs.uk/R4/CodeSystem/UKCore-AdditionalRelatedPersonRole",
          "code" : "Guardian",
          "display" : "Guardian of patient"
        } ]
      } ],
      "extension" : [ {
        "url" : "https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-CopyCorrespondenceIndicator",
        "valueBoolean" : true
      }, {
        "url" : "https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-ContactRank",
        "valuePositiveInt" : 1
      }, {
        "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-ContactPreference",
        "extension" : [ {
          "url" : "PreferredWrittenCommunicationFormat",
          "valueCodeableConcept" : {
            "coding" : [ {
              "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-PreferredWrittenCommunicationFormat",
              "code" : "12",
              "display" : "Braille"
            } ]
          }
        }, {
          "url" : "PreferredContactMethod",
          "valueCodeableConcept" : {
            "coding" : [ {
              "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-PreferredContactMethod",
              "code" : "1",
              "display" : "Letter"
            } ]
          }
        }, {
          "url" : "PreferredContactTimes",
          "valueString" : "Not after 7pm"
        } ]
      }, {
        "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSCommunication",
        "extension" : [ {
          "url" : "language",
          "valueCodeableConcept" : {
            "coding" : [ {
              "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-HumanLanguage",
              "version" : "1.0.0",
              "code" : "fr",
              "display" : "French"
            } ]
          }
        }, {
          "url" : "interpreterRequired",
          "valueBoolean" : true
        } ]
      } ],
      "telecom" : [ {
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "system" : "phone",
        "value" : "01632960587",
        "use" : "home"
      } ],
      "address" : [ {
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "use" : "home",
        "line" : [ "1 Trevelyan Square", "Boar Lane", "City Centre", "Leeds", "West Yorkshire" ],
        "postalCode" : "LS1 6AE",
        "extension" : [ {
          "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-AddressKey",
          "extension" : [ {
            "url" : "type",
            "valueCoding" : {
              "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-AddressKeyType",
              "code" : "PAF"
            }
          }, {
            "url" : "value",
            "valueString" : "12345678"
          } ]
        } ]
      } ]
    }
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

resourceType
string
	

FHIR Resource Type.

Default: Bundle


type
string
	

FHIR Bundle Type.

Default: searchset


timestamp
string datetime
	

Time the search was performed.

Example: 2019-12-25T12:00:00+00:00


total
integer
	

Number of resources returned in search.

Example: 1


entry
array
	

A list of related people details attached to the patient.

HTTP status: 4XX

An error occurred as follows:

HTTP status	Error code	Description
400	INVALID_RESOURCE_ID	Invalid NHS number.
400	MISSING_VALUE	Missing header parameter. For details, see the diagnostics field.
400	INVALID_VALUE	Invalid header parameter. For details, see the diagnostics field.
401	ACCESS_DENIED	Access token missing, invalid or expired, or calling application not configured for this operation.
404	RESOURCE_NOT_FOUND	No related people exist for given NHS number.
404	INVALIDATED_RESOURCE	Patient record for given NHS number has been invalidated and not superseded by another NHS number.
408	UNABLE_TO_CALL_SERVICE	The downstream domain processing has not completed within the configured timeout period.
429	TOO_MANY_REQUESTS	You have exceeded your application's rate limit.
Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "OperationOutcome",
  "issue" : [ {
    "severity" : "error",
    "code" : "structure",
    "details" : {
      "coding" : [ {
        "system" : "https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode",
        "version" : "1",
        "code" : "PRECONDITION_FAILED",
        "display" : "Required condition was not fulfilled"
      } ]
    },
    "diagnostics" : "Invalid request with error - X-Request-ID header must be supplied to access this resource"
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

Outcome of an operation that does not result in a resource or bundle being returned, for example an error or an async/batch submission. There are a number of possible error codes that can be returned along with a more detailed description in the display field.



resourceType
string
	

FHIR Resource Type.

Default: OperationOutcome


issue
array
	

List of issues that have occurred.

Min items: 1
Search for a patient
GET /Patient
Try this API
Overview

Use this endpoint to search for a patient in PDS.

You can search using various combinations of:

given name
family name
gender
postcode
date of birth - which can be a range
date of death - which can be a range
registered GP practice

There are various search options, such as fuzzy search, exact match, history and wildcards.

The behaviour of this endpoint depends on which access mode you are using:

Access mode	Behaviour
Application-restricted access	Only a single unique match returned
Healthcare worker access	Up to 50 matching patient records returned
Patient access	Not yet available
Search options

The following sections explain the various search options. Which options you choose depends very much on your use case, and getting it right is really important. If you need help, contact us.

Application-restricted access mode

In this access mode, you only get a single matching patient record, and only if it's a unique match.

Use search options that are likely to find a unique match. In our experience, the following is a good starting point:

search on given name, family name, postcode and date of birth - this combination should uniquely identify a patient
for given name, use the first three characters and a wildcard, for example to search for Annabel, use Ann* - this caters for different name spellings and abbreviations
for postcode, use the first two characters and a wildcard, for example to search for LS11 6AD, use LS* - this caters for people who have moved locally but not updated PDS
use a non-fuzzy search - this reduces the chance of multiple matches
use a non-exact match - an exact match does not work with wildcards
include history - this increases the chance of a match

For more details, see the following sections.

Healthcare worker access mode

In this access mode - where the end user is a strongly authenticated healthcare worker - you can get up to 50 matching patient records. This allows the end user to choose the best match.

Use search parameters that are relevant to your use case - for example date of death is not always appropriate.

To protect patient privacy, design your search to minimise the number of matching patients. For example, you could:

encourage users to enter as many search parameters as they can
force users to try a non-fuzzy search first and then only offer a fuzzy search if they cannot find the patient

For more details, see the following sections.

Non-fuzzy search

A non-fuzzy search:

allows wildcards in names and postcodes
does not match homophones or transposed names
can optionally search history, such as previous names and addresses

It is less likely to return multiple matches than a fuzzy search, so is more suitable for finding a unique match.

The minimum search parameters are:

family name - which can include wildcards
date of birth - which can be a range
Fuzzy search

A fuzzy search:

matches common homophones, such as Smith and Smythe, using the Soundex algorithm
checks for transposed names, such as Adam Thomas and Thomas Adam
always searches history, such as previous names and addresses

It is more likely to include multiple matches than a non-fuzzy search, so is not ideal for finding a unique match.

It is also more likely to include false positives - other patients that match the search criteria. Therefore, for privacy reasons, it is better to use it only if a non-fuzzy match has failed.

You must use one of the following search parameter combinations:

given name, family name and date of birth
family name, date of birth, gender and postcode
given name, date of birth, gender and postcode

If you include the date of death or registered GP practice query parameters, they are not used in the search. However they do affect the patient's matching score - a mismatch reduces the returned score.

History

PDS holds historic information, including previous names and addresses.

A fuzzy search always includes history. For a non-fuzzy search, you can request to include history.

Searching history can match patients where only a previous name or address is known, or if a patient provides a previous name or address on the assumption that their record hasn’t been updated.

Exact match

You can request an exact match. This might be useful if you are verifying an NHS number against details you already believe to be correct. It is unlikely to work well with wildcards or fuzzy search.

Names

Matching names can be difficult due to:

multiple given names, such as in Jane Anne Smith
compound given names, such as in John Paul Smith
multiple or double-barrelled surnames, such as in Michael Smith-Jones
homophones, such as Smith and Smythe or Ann and Anne
abbreviated names, such as Bob instead of Robert
transposed names, such as Adam Thomas instead of Thomas Adam
previous names, such as maiden names
special characters such as in O'Reilly, Jones-Smith or Kociński
spelling mistakes, either in the search criteria or in PDS

To deal with some of these issues:

we always search all given names
we search across all types of name - usual, nickname and temporary
a fuzzy search matches homophones, transposed names and previous names
for a non fuzzy search, you can optionally use wildcards and search previous names
Gender

PDS has four options for gender - male, female, other and unknown. For some people, the gender held in PDS might not match the gender they identify with.

In these cases, searching by gender might not find the patient. These are edge cases but are important to consider because gender can be a sensitive issue for the people in question.

In general, we recommend not including gender as a search parameter.

Date of birth and death

Sometimes, the exact date of birth or death is not known when doing a search. Sometimes, the date of birth or death is not accurate in PDS. For example, if only the year of birth is known, the day and month of birth might be recorded as the first of January - for example, 01/01/1932.

In such cases, searching a range of dates can help. This can result in multiple matches, so might not work well when searching for a unique match.

Postcode

People sometimes move locally, meaning the postcode in PDS is out of date, but does at least match on the first two characters.

Searching for the first two characters of the postcode and a wildcard can work well. For example, to search for LS11 6AD, use LS*. This is only possible for a non-fuzzy search.

This can result in multiple matches, but it has been known to work well in some cases - even for unique matches.

General practitioner

This is an ODS code. If you use it, it must match exactly.

Patient data returned

The patient data returned on a search is not the full set of data that is returned on a retrieval by NHS number. The following data is included:

NHS number
names - usual, nickname and temporary
gender
birth information, apart from place of birth
death information
address - home address
contact details
registered GP
restricted patient flag

The following data is excluded:

place of birth
names, apart from usual, nickname and temporary
addresses, apart from home address
pharmacy details
communication details
contact preferences
Restricted patients

Some patients are tagged as restricted and are sometimes known as sensitive patients. When performing a search, restricted patients can be returned; however, location sensitive fields such as address, telecom, contact and generalPractitioner are removed.

If address-postcode or general-practitioner are included in the search parameters, no restricted patients are returned even if a match is identified.

The restricted flag can be found in the data under meta/security on the patient resource.

Invalidated patients

Some patients are marked as invalidated in PDS - also known as redacted in FHIR terminology. Invalidated patient records are not returned in search results. If an invalidated patient record has been superseded, the superseding record is returned.

Scoring

Every matched patient in the result list includes a score to indicate how closely the patient matched the search parameters.

A score of 1.0 indicates an exact match. A score of less than 1.0 indicates a partial match.

The result list is sorted in descending score order - best match first.

Use the _exact-match query parameter to return exact matches only - where the score is 1.0.

Clinical safety and privacy

This endpoint can return multiple matching patients for a given search, including partial matches.

Ensure that you design your software to minimise the following risks:

an end user selects the wrong patient from the results presented, so there is a risk of clinical harm; for example due to retrieval of the wrong clinical data
the end user has access to patients’ personal data, so there is a risk to patient privacy

Note that:

we record an access request in our audit trail for all patients matched in a PDS search
it is almost certainly a good idea to display search results in descending score order - best match first

Please consider the information your application returns to users. For example a patient's temporary address can be used to perform a successful search. The home address will be included in the response. For citizen facing services please be aware of this behaviour and do not present a different address to the patient, unless they are logged in at a sufficiently high proof point.

Sandbox testing

You can test the following scenarios in our sandbox environment:

Scenario	Request	Response
Basic search	family=Smith, gender=female, birthdate=eq2010-10-22	HTTP Status 200 with single search result.
Wildcard search	family=Sm*, gender=female, birthdate=eq2010-10-22	HTTP Status 200 with search result of two.
Search with limited results	family=Sm*, gender=female, birthdate=eq2010-10-22, _max-results=2	HTTP Status 200 with search result of two.
Search with date range	family=Smith, gender=female, birthdate=ge2010-10-21, birthdate=le2010-10-23	HTTP Status 200 with single search result.
Fuzzy search	family=Smith, given=Jane, gender=female, birthdate=eq2010-10-22, _fuzzy-match=true	HTTP Status 200 with single search result.
Restricted patient search	family=Smythe, given=Janet, gender=female, birthdate=eq2005-06-16	HTTP Status 200 with single search result with restricted data omitted.
Compound name search	family=Smith, given=John Paul, given=James, gender=female, birthdate=eq2010-10-22	HTTP Status 200 with single search result.
Unsuccessful search	Any other valid search query parameters	HTTP Status 200 with no search results
Invalid date format	birthdate or death-date query parameters with values not in format YYYY-MM-DD	HTTP Status 400 with problem description
Too few search parameters	Any invalid combination of query parameters	HTTP Status 400 with problem description
Missing X-Request-ID	id=9000000009 (or any other valid NHS number)	HTTP Status 412 with problem description

You can try out the sandbox using the 'Try this API' feature on this page.

Alternatively, you can try out the sandbox using our Postman collection:

Request
Query parameters
Name	Description
_fuzzy-match	

Boolean

Default value: false

A fuzzy search is performed, including checks for homophones, transposed names and historic information.

You cannot use wildcards with a fuzzy search.

Example: false


_exact-match	

Boolean

Default value: false

The search only returns results where the score field is 1.0. Use this with care - it is unlikely to work with fuzzy search or wildcards.

Example: false


_history	

Boolean

Default value: false

The search looks for matches in historic information such as previous names and addresses.

This parameter has no effect for a fuzzy search, which always includes historic information.

Example: true


_max-results	

Integer (int32)

The maximum number of matching patients to return. For healthcare worker access, this must be between 1 and 50, and the default is 50. For application-restricted access, this must be 1, and the default is 1. If too many patients match the search criteria, we return a TOO_MANY_MATCHES error.

Example: 1


family	

String

The patient's family name (surname).

Not case sensitive. Use * as a wildcard but not in the first two characters and not in fuzzy search mode. Must be URL encoded, for example a space must be represented by either %20 or + and a wildcard must be encoded as %2A.

Examples

Matches Smythe if `_fuzzy-match` is specified.

Smith

Wildcards must contain at least two characters, this matches Smith, Smythe

Sm*t*


given	

array[String]

The patient's given names.

Not case sensitive. Use * as a wildcard but not in the first two characters and not in fuzzy search mode. Must be URL encoded, for example a space must be represented by either %20 or + and a wildcard must be encoded as %2A.

A patient may have more than one given name. Subsequent given names are commonly referred to as 'middle names'. Specify multiple given names by repeating this parameter. To search for Jane Anne Smith use given=Jane&given=Anne&family=Smith.

The first given name may be a compound name, for example John Paul. To search for John Paul James Smith (where John Paul is the first given name, James is the second given name, and Smith the family name) use given=John%20Paul&given=James&family=Smith.

Note that it is not necessary to specify subsequent given (middle) names, and that doing so may impact your search results in the case they are not recorded in the demographics system.

Example: Jane


gender	

String

Gender with which the patient most strongly identifies.

Allowed values: male, female, other, unknown


birthdate	

array[String]

Date of birth in the format <eq|ge|le>yyyy-mm-dd. To specify a range, use birthdate=geyyyy-mm-dd&birthdate=leyyyy-mm-dd.

Examples

Exact match date

[ "eq2010-10-22" ]

Greater than or equals match, which matches 2010-10-22 or 2010-10-23

[ "ge2010-10-22" ]

Less than or equals match, which matches 2010-10-22 or 2010-10-21

[ "le2010-10-22" ]


death-date	

date (date)

Date of death in the format <eq|ge|le>yyyy-mm-dd. To specify a range, use death-date=geyyyy-mm-dd&death-date=leyyyy-mm-dd.

For a fuzzy search, this is ignored for matching but included in the score calculation.

Examples

Exact match date

eq2010-10-22

Greater than or equals match which matches 2010-10-22 or 2010-10-23

ge2010-10-22

Less than or equals match, which matches 2010-10-22 or 2010-10-21

le2010-10-22


address-postcode	

String

The postcode of any of the patient’s known addresses.

Not case sensitive. Spaces are ignored, for example LS16AE and LS1 6AE both match LS1 6AE. Use * as a wildcard but not in the first two characters and not in fuzzy search mode. Must be URL encoded, for example a space must be represented by either %20 or + and a wildcard must be encoded as %2A.

Examples

Spaces ignored, would match LS16AE

LS1 6AE

Matches 'LS16AE', 'LS1 6AE' and 'LS1 6AB'

LS1*


general-practitioner	

String

The Organisation Data Service (ODS) code of the patient's registered GP practice.

Not case sensitive. For a fuzzy search, this is ignored for matching but included in the score calculation.

Example: Y12345

Headers
Name	Description
Authorization	

String (^Bearer\ [[:ascii:]]+$)

An OAuth 2.0 bearer token.

Required in all environments except sandbox.

Example: Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM


NHSD-Session-URID	

String

The user role ID (URID) for the current session. Also known as a user role profile ID (URPID).

This header is optional.

In Application-restricted access mode this header is ignored.

In Healthcare worker access mode if you send this header it must be valid for the logged-in user. See determine the user's role for guidance.

Pattern: /^[0-9]+$/

Example: 555254240100


X-Request-ID	

String

A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.

Must be a universally unique identifier (UUID) (ideally version 4).

Mirrored back in a response header.

If you re-send a failed request, use the same value in this header.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068


X-Correlation-ID	

String

An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding . characters.

Mirrored back in a response header.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA

Response
HTTP status: 200

A completed search. This might contain zero, one or many matching patients, or it might contain a 'TOO_MANY_MATCHES' error.

Headers
Name	Description
X-Correlation-Id	

String

The X-Correlation-ID from the request header, if supplied, mirrored back.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA


X-Request-Id	

String

The X-Request-ID from the request header, if supplied, mirrored back.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068

Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "Bundle",
  "type" : "searchset",
  "timestamp" : "2019-12-25T12:00:00+00:00",
  "total" : 1,
  "entry" : [ {
    "fullUrl" : "https://api.service.nhs.uk/personal-demographics/FHIR/R4/Patient/9000000009",
    "search" : {
      "score" : 0.75
    },
    "resource" : {
      "resourceType" : "Patient",
      "id" : "9000000009",
      "identifier" : [ {
        "system" : "https://fhir.nhs.uk/Id/nhs-number",
        "value" : "9000000009",
        "extension" : [ {
          "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSNumberVerificationStatus",
          "valueCodeableConcept" : {
            "coding" : [ {
              "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-NHSNumberVerificationStatus",
              "version" : "1.0.0",
              "code" : "01",
              "display" : "Number present and verified"
            } ]
          }
        } ]
      } ],
      "meta" : {
        "versionId" : "2",
        "security" : [ {
          "system" : "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
          "code" : "U",
          "display" : "unrestricted"
        } ]
      },
      "name" : [ {
        "id" : "123",
        "use" : "usual",
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "given" : [ "Jane" ],
        "family" : "Smith",
        "prefix" : [ "Mrs" ],
        "suffix" : [ "MBE" ]
      } ],
      "gender" : "female",
      "birthDate" : "2010-10-22",
      "multipleBirthInteger" : 1,
      "deceasedDateTime" : "2010-10-22T00:00:00+00:00",
      "address" : [ {
        "id" : "456",
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "use" : "home",
        "line" : [ "1 Trevelyan Square", "Boar Lane", "City Centre", "Leeds", "West Yorkshire" ],
        "postalCode" : "LS1 6AE",
        "extension" : [ {
          "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-AddressKey",
          "extension" : [ {
            "url" : "type",
            "valueCoding" : {
              "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-AddressKeyType",
              "code" : "PAF"
            }
          }, {
            "url" : "value",
            "valueString" : "12345678"
          } ]
        } ]
      } ],
      "telecom" : [ {
        "id" : "789",
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "system" : "phone",
        "value" : "01632960587",
        "use" : "home"
      }, {
        "id" : "OC789",
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "system" : "other",
        "value" : "01632960587",
        "use" : "home",
        "extension" : [ {
          "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-OtherContactSystem",
          "valueCoding" : {
            "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-OtherContactSystem",
            "code" : "textphone",
            "display" : "Minicom (Textphone)"
          }
        } ]
      } ],
      "contact" : [ {
        "id" : "C123",
        "period" : {
          "start" : "2020-01-01",
          "end" : "2021-12-31"
        },
        "relationship" : [ {
          "coding" : [ {
            "system" : "http://terminology.hl7.org/CodeSystem/v2-0131",
            "code" : "C",
            "display" : "Emergency Contact"
          } ]
        } ],
        "telecom" : [ {
          "system" : "phone",
          "value" : "01632960587"
        } ]
      } ],
      "generalPractitioner" : [ {
        "id" : "254406A3",
        "type" : "Organization",
        "identifier" : {
          "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
          "value" : "Y12345",
          "period" : {
            "start" : "2020-01-01",
            "end" : "2021-12-31"
          }
        }
      } ],
      "extension" : [ {
        "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus",
        "extension" : [ {
          "url" : "deathNotificationStatus",
          "valueCodeableConcept" : {
            "coding" : [ {
              "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-DeathNotificationStatus",
              "version" : "1.0.0",
              "code" : "2",
              "display" : "Formal - death notice received from Registrar of Deaths"
            } ]
          }
        }, {
          "url" : "systemEffectiveDate",
          "valueDateTime" : "2010-10-22T00:00:00+00:00"
        } ]
      } ]
    }
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

resourceType
string
	

FHIR Resource Type.

Default: Bundle


type
string
	

FHIR Bundle Type.

Default: searchset


timestamp
string datetime
	

Time the search was performed.

Example: 2019-12-25T12:00:00+00:00


total
integer
	

Number of resources returned in search.

Example: 1


entry
array
	

A list of matched patients. Empty if none found. The patients are ordered by match score, best first. A maximum of 50 patients are returned.

HTTP status: 4XX

An error occurred as follows:

HTTP status	Error code	Description
200	TOO_MANY_MATCHES	Too many matches were found - user should be told to refine their search parameters.
400	INVALID_SEARCH_DATA	Invalid combination of search parameters. For details, see the diagnostics field.
400	UNSUPPORTED_SERVICE	No search parameters provided.
400	MISSING_VALUE	Missing header or query parameter. For details, see the diagnostics field.
400	INVALID_VALUE	Invalid header or query parameter. For details, see the diagnostics field.
400	ADDITIONAL_PROPERTIES	Unrecognised query parameter. For details, see the diagnostics field.
401	ACCESS_DENIED	Access token missing, invalid or expired, or calling application not configured for this operation.
403	INVALID_VALUE	Multiple results requested when using the API in application-restricted mode.
408	UNABLE_TO_CALL_SERVICE	The downstream domain processing has not completed within the configured timeout period.
429	TOO_MANY_REQUESTS	You have exceeded your application's rate limit.
Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "OperationOutcome",
  "issue" : [ {
    "severity" : "error",
    "code" : "value",
    "details" : {
      "coding" : [ {
        "system" : "https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode",
        "version" : "1",
        "code" : "INVALID_VALUE",
        "display" : "Provided value is invalid"
      } ]
    },
    "diagnostics" : "Invalid value - 'mal' in field 'gender'"
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

Outcome of an operation that does not result in a resource or bundle being returned, for example an error or an async/batch submission. There are a number of possible error codes that can be returned along with a more detailed description in the display field.



resourceType
string
	

FHIR Resource Type.

Default: OperationOutcome


issue
array
	

List of issues that have occurred.

Min items: 1
Update patient details
PATCH /Patient/{id}
Try this API
Overview

Use this endpoint to update patient details in PDS.

This is a 'PATCH' operation - you can update specific parts of the patient record, such as name or gender, without having to update the entire record.

When you make a PATCH request with your application, the endpoint will respond with a successful (200) response code, along with the updated patient resource, or, an unsuccessful (4xx/5xx) response.

99.99% of all updates complete in under 10 seconds. If an update takes longer than 10 seconds, the endpoint responds with an HTTP status of 503 (Gateway Timeout).

You can alter the timeout period using the X-Sync-Wait header. If you re-submit the update, use the same X-Request-ID header.

The behaviour of this endpoint depends on which access mode you are using:

Access mode	Behaviour restrictions
Application-restricted access	Updates not allowed
Healthcare worker access	Updates allowed
Patient access	Updates allowed (Available in integration environment only)
Patient resource versioning

To update a patient's resource you must have retrieved it first, to ensure you are working against an up-to-date patient resource.

When you retrieve a patient resource, you get a version number for the resource (in the ETag response header in the form W/"2" and in the versionId field in the response, in the form "2").

You must then pass the patient's version number in the update request (in the If-Match response header).

It is recommended you use the value from the Etag header as this is in the correct form the If-Match header is expected, for example W/"2" and can be mirrored back in the request.

The update only succeeds, if the patient resource has not been updated in our database between your first retrieval and the update request.

If the update succeeds, you will receive the updated patient resource, this will contain the new resource version number.

If you make a subsequent update you must use the new version number.

JSON Patch

To update a patient record, a JSON Patch should be sent. A JSON Patch consists of one or more patch objects within a list.

It is recommended that all desired updates are sent together in a single request as a list of patches. This is the most efficient approach and reduces the danger of race conditions occurring when updating the patient record multiple times in a short period of time.

When processing the list of patch objects, each patch must be valid and pass all the business rules against the data. If one patch object fails, none of the patch objects are applied.

A patch object consists of:

an operation, op - this is required.
a path to the data that you want to change, path - this is required.
the value that is assigned, value - this is required for add, replace and test; but should not be included for a remove.

The following operations are supported:

add - to add a new value.
replace - to replace an existing value.
remove - to remove an existing value.
test - to test the state of a value is as expected before continuing with the update.

Paths point to a single value, list or object, for example:

/gender - pointing to the gender value.
/name - point to the name list.
/name/0 - pointing to the 1st object in the name list.
/address/0/line/1 - pointing to the 2nd line string in the 1st address object.

The value can be set to any valid value for that path, so could be a null, a string, an object or a list.

Addition

add should be used to add new items to a patient.

Adding a simple data item such as the date of death can be done using a patch such as:

JSON

Copy
{
    "patches": [
      { "op": "add", "path": "/deceasedDate", "value": "2020-01-01" }
  ]
}


Adding to a list such as a name should be done by including the whole object in the value field. Note, the list index is - this is because when adding to a list, the index is not known:

JSON

Copy
{
    "patches": [
      {
            "op": "add",
            "path": "/name/-",
            "value": {
                "use": "usual",
                "period": { "start": "2019-12-31" },
                "prefix": ["Dr"],
                "given": [
                  "Joe",
                  "Horation",
                  "Maximus"
                ],
                "family": "Bloggs",
                "suffix": ["PhD"]
            }
        }
  ]
}


When adding a base level list item such as a new name or address, ensure the index is always -, otherwise the request is rejected. For example, /name/-. The reason for this is because the backend system makes the decision on the ordering of the listed objects to ensure they are always returned in the same order.

If you are adding to a sub-element that is a list, such as an additional given name, it is valid to provide an exact index. So the following is valid:

JSON

Copy
{
  "patches": [
    {
      "op": "add", "path": "/name/0/id", "value": "8F8B957D"
    },
    {
      "op": "add", "path": "/name/0/given/0", "value": "Rose"
    }
  ]
}


It is possible to add a sub-element to an existing object in a patch request. If the object already exists and you have the object id, you must supply it or the update is rejected. The following patch is allowed:

JSON

Copy
{
  "patches": [
    {
      "op": "add", "path": "/name/0/id", "value": "8F8B957D"
    },
    {
      "op": "add", "path": "/name/0/given/0", "value": "Rose"
    }
  ]
}


but the following is not allowed:

JSON

Copy
{
  "patches": [
    {
      "op": "add", "path": "/name/0/given/-", "value": "Rose"
    }
  ]
}

Replacing

replace should be used to alter existing items on the patient.

Replacing a simple data item such as the gender can be done using a patch such as:

JSON

Copy
{
    "patches": [
      { "op": "replace", "path": "/gender", "value": "male" }
  ]
}


Replacing a list item can be done in two ways which may be dependent on any external development libraries that can be used to create the patch.

The first approach is to replace the whole list item:

JSON

Copy
{
    "patches": [
      {
            "op": "replace",
            "path": "/name/0",
            "value": {
                "id": "123",
                "use": "usual",
                "period": { "start": "2019-12-31" },
                "prefix": ["Dr"],
                "given": [
                  "Joe",
                  "Horation",
                  "Maximus"
                ],
                "family": "Bloggs",
                "suffix": ["PhD"]
            }
        }
  ]
}


The second approach is to replace just a part, or parts, of the list object keys if all others remain the same:

JSON

Copy
{
    "patches": [
      { "op": "replace", "path": "/name/0/id", "value": "123" },
      { "op": "replace", "path": "/name/0/prefix/0", "value": "Mr" },
      { "op": "replace", "path": "/name/0/family", "value": "Smith" }
    ]
}


An added requirement to ensure no accidental data loss or replacement of the wrong list item, you must always include the list id or url. This is in the object on retrieval so just needs to be mirrored back. You should not include an ID on an addition as this is automatically generated by the system and is a unique object ID, so only our system can guarantee that.

Removal

remove should be used to delete existing items on a patient.

Removing a simple data item such as the gender can be done using a patch such as:

JSON

Copy
{
    "patches": [
      { "op": "remove", "path": "/gender" }
  ]
}


Note, that in this scenario, although the patch is perfectly valid, the update is still rejected as a patients gender cannot be removed.

Removing a list item should only be done on the whole item object, not individual sub-items; instead use the replace operation.

To remove a list item, a test operation must immediately proceed the remove . This is an added requirement to ensure no accidental data loss occurs or the wrong item is removed. The test operation should be used to assert either:

the id - the object ID for items that have one - for example name, address or telecom.
the url - the URL for the extension being removed.
the whole object being removed.

An example of a list item removal using the id would be:

JSON

Copy
{
    "patches": [
      { "op": "test", "path": "/name/0/id", "value": "123" },
      { "op": "remove", "path": "/name/0" }
  ]
}


An example of a extension list item removal using the url would be:

JSON

Copy
{
    "patches": [
      { "op": "test", "path": "/extension/0/url", "value": "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus" },
      { "op": "remove", "path": "/extension/0" }
  ]
}


An example of a list item removal using the whole object would be:

JSON

Copy
{
    "patches": [
      { 
            "op": "test",
            "path": "/name/0",
            "value": {
                "id": "123",
                "use": "usual",
                "period": { "start": "2019-12-31" },
                "prefix": ["Dr"],
                "given": [
                  "Joe",
                  "Horation",
                  "Maximus"
                ],
                "family": "Bloggs",
                "suffix": ["PhD"]
            }
        },
      { "op": "remove", "path": "/name/0" }
  ]
}


Special care should be taken when performing multiple removals in the same list; as removing a particular index could affect all subsequent index positions. The next two examples perform exactly the same operation.

Using the following initial (simplified) data, with the intention of removing the names in index 1 (Irwin) and 2 (Bruce):

JSON

Copy
{
    "name": [
        {"id": "2", "family": "Parker"},
        {"id": "3", "family": "Irwin"},
        {"id": "4", "family": "Bruce"},
        {"id": "5", "family": "Sharpe"}
    ]
}


Example 1:

JSON

Copy
{
    "patches": [
      { "op": "test", "path": "/name/1/id", "value": "3" },
      { "op": "remove", "path": "/name/1" },
      { "op": "test", "path": "/name/1/id", "value": "4" },
      { "op": "remove", "path": "/name/1" }
  ]
}


After the 1st removal the data looks like:

JSON

Copy
{
    "name": [
        {"id": "2", "family": "Parker"},
        {"id": "4", "family": "Bruce"},
        {"id": "5", "family": "Sharpe"}
    ]
}


meaning Irwin has been removed, Bruce has moved from index 2 -> 1 and Sharpe from 3 -> 2.

So after applying the 2nd removal the data looks like:

JSON

Copy
{
    "name": [
        {"id": "2", "family": "Parker"},
        {"id": "5", "family": "Sharpe"}
    ]
}


Which is the intended outcome. Using the same index 1 for both removals may look unexpected, but the way JSON Patch works is iterating over each patch operation in turn and making the change to the list index positions. This means a developer needs to account for lists changing from one operation to the next.

Example 2:

JSON

Copy
{
    "patches": [
      { "op": "test", "path": "/name/2/id", "value": "4" },
      { "op": "remove", "path": "/name/2" },
      { "op": "test", "path": "/name/1/id", "value": "3" },
      { "op": "remove", "path": "/name/1" }
  ]
}


After the 1st removal the data looks like:

JSON

Copy
{
    "name": [
        {"id": "2", "family": "Parker"},
        {"id": "3", "family": "Irwin"},
        {"id": "5", "family": "Sharpe"}
    ]
}


Applying the 2nd removal the data looks like:

JSON

Copy
{
    "name": [
        {"id": "2", "family": "Parker"},
        {"id": "5", "family": "Sharpe"}
    ]
}


Which is the intended outcome. Providing the patches with the indexes descending means that the list stays in a stable format the whole way through as the only changes to the index positions are items have been passed over already.

Example 3 - a failure

JSON

Copy
{
    "patches": [
      { "op": "test", "path": "/name/1/id", "value": "3" },
      { "op": "remove", "path": "/name/1" },
      { "op": "test", "path": "/name/2/id", "value": "4" },
      { "op": "remove", "path": "/name/2" }
  ]
}


After the 1st removal the data looks like:

JSON

Copy
{
    "name": [
        {"id": "2", "family": "Parker"},
        {"id": "4", "family": "Bruce"},
        {"id": "5", "family": "Sharpe"}
    ]
}


When applying the 2nd test, it fails as the index 2 ID is 5, but the test was looking for 4. An error is returned and none of the updates provided would be made to the database.

This failure example is a good reason for forcing the use of the test operation. If there was no test, index 2 would have been blindly removed, meaning the final state of the data would look like:

JSON

Copy
{
    "name": [
        {"id": "2", "family": "Parker"},
        {"id": "4", "family": "Bruce"}
    ]
}


Which is incorrect, as Irwin and Sharpe were removed instead of Irwin and Bruce.

Patient data fields
Address

List item found under address field.

In a JSON Patch request the path should be:

/address/0 if the address to be replaced or removed is the first item in the list. If it is the second item in the list the path is /address/1, and so on.
/address/- when adding a new address.

An address consists of 5 lines of unstructured text, postcode and PAF (Postcode Address File) key.

Postcode is optional but strongly encouraged. If the address has no postcode, use a pseudo postcode from the list defined by the Office for National Statistics (see the ‘look_ups’ file).

In particular, for a patient at no fixed abode, use the pseudo postcode ZZ99 3VZ.

When adding or replacing address lines, use the following rules:

line 1 - premises ID and/or house name, for example Flat 1 or The Old Schoolhouse
line 2 - house number, dependent thoroughfare name and descriptor (if present), thoroughfare name and descriptor, for example 23 Mill Lane
line 3 - dependent locality/village, locality (if present), for example Boxgrove
line 4 - post town, for example Leeds
line 5 - county (if present), for example West Yorkshire

When updating an address, you must populate lines 1 or 2, and line 4. You should not include line 5 in manually created addresses but you may include it in PAF-derived addresses.

There are exceptions:

if you submit a postcode and PAF key, in which case the lines are automatically populated, however if there are no matches or too many matches the message is rejected due to missing address lines
if you use a pseudo postcode, for example ZZ99 3VZ meaning no fixed abode

When creating the FHIR payload message, to be fully FHIR compliant all empty lines should be removed, so for example:

JSON

Copy
{
    "address": {
        "line": [
            "",
            "23 Mill Lane",
            "",
            "Leeds",
            ""
        ]
    }

}


should be sent in as:

JSON

Copy
        {
            "address": {
                "line": [
                    "23 Mill Lane",
                    "Leeds"
                ]
            }

        }


however if you do not do this the message is not rejected; the response is in that form though.

To ensure consistent data across all patient addresses, you should match addresses to the PAF and send them in PAF format including the PAF key. If you do not include the PAF key it is added to the address if a match is found Additionally the provided address lines and post code are enriched and reformatted if necessary.

The following address types are supported:

home - the home address is the patient's normal residence. Home address is also known as usual, main, registered, current or permanent address
temp - a temporary address is an address used for a set period of time, but where the patient's home, permanent address remains unchanged
billing - an address used for correspondence purposes only

A patient must have no more than one current temp and/or billing address. However, historically this was constrained only by the integration requirements and was not enforced so theoretically more than one can exist for a patient when retrieving. Where multiple instances already exist for the patient it is not expected that local systems should manage those, but should choose the most appropriate one to maintain (for example by examining period dates).

A home address is the patient's main residential address and should normally be used for all clinical and demographic purposes, including clinical and appointment correspondence. However additionally, temp and billing addresses may be provided by a patient when there is a requirement to record an alternative location for the purposes of unbroken care. When sending correspondence to a patient:

a present and valid billing address may take precedence over home and temp addresses. A patient should have only a single current billing address. An address is considered 'valid' according to its period start and to dates.
if no current billing address is provided, a temp address may take precedence over the home address, again if it is valid according to its period start and to dates.
if there is no valid, current billing and/or temp address, the home address must be used.

Not all local systems support temp and billing addresses, so these are not uniformly maintained. Therefore, where the patient contact has clinical or business significance, the precedence of these addresses over the home address should be determined by a user wherever possible. When the end date for a temp or billing address passes, local systems should use the patient’s home address. It is extremely rare that no home address is present on a patient record.

Be aware of the following business rules:

you cannot add more than one of each address use types; home, temp or billing
work address use type is a valid response but cannot be added or replaced as it is a legacy value. An address with the work type can be removed though
any temp address must have both a period start and a period end date. The provision of a period end date has particular importance in order to avoid temporary addresses that are no longer relevant to the patient still being held as current data available to any system retrieving the patient record. A suggested default where no actual period end is known is 30 days later than the period start, up to a maximum of 3 months.
any billing address must have both a period start and a period end date. The provision of a period end date has particular importance in order to avoid correspondence addresses that are no longer relevant to the patient still being held as current data available to any system retrieving the patient record. A suggested default where no actual period end is known is 30 days later than the period start, up to a maximum of 12 months.
the date period is optional; where present they must be valid dates and the end date cannot be before the start date
the period start date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update
where a temp address is provided a description must be sent using the text field, the list of possible values are:
Second Home - a patient's second home
Student Accommodation - a patient's place of residence while at university
Respite Care Address - where the patient resides during respite care
Temporary Residence Address - where the patient resides for a specific period of time
Convalescence Home - the address for a patient during a period of recovery
Mobile Home - the address of a patient's mobile home, parked for a specific period of time, e.g. the address of a caravan park
Holiday Home - the address for a patient during a holiday
Communication

Single item found under extension with the extension URL https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSCommunication.

In a JSON Patch request, where the communication extension does not exist the path should be:

/extension/- when adding a communication extension.

Where you are replacing/removing the full communication extension, the path should be:

/extension/0 if the communication extension is the first item in the list. If it is the second item in the list the path is /extension/1, and so on.

Where the communication extension already exists and you wish to replace a specific sub-extension, then the path should be:

/extension/0/extension/1 if the communication extension is the first item in the list and the sub-extension is the second item in the list.

You can find examples of the above requests in our sandbox Postman collection

There are a number of business rules that should be taken into account:

preferred language must not be supplied where it is English even though the code list contains a value for English (en).
any language codes outside the accepted list are rejected; such as local system qa codes.
Contact preferences

Single item found under extension with the extension URL https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-ContactPreference.

In a JSON Patch request, where the Contact Preference extension does not exist or you are replacing/removing the full list of Contact preferences, the path should be:

/extension/0 if the contact preference is the first item in the list. If it is the second item in the list the path is /extension/1, and so on.
/extension/- when adding a contact preference.

Where the Contact Preference extension already exists and you wish to add, replace or remove a specific contact preference(s) sub-extension, then the path should be:

/extension/0/extension/1 if the contact preference extension is the first item in the list and the method is the second item in the sub-extension list.

You can find examples of the above requests in our sandbox Postman collection

There are a number of business rules that should be taken into account:

a patient can have 0 or 1 contact preference.
preferred contact time is a free-text field limited to 40 characters.
where a contact time is specified a contact method must also exist.
Date of birth

Single item found under birthDate field.

In a JSON Patch request the path should be /birthDate.

When adding or updating the birth date, the update should be in the format yyyy-mm-dd.

There are a number of business rules that should be taken into account:

cannot be removed.
cannot be a date in the future.
cannot be after the deceased date, if present.
Date of death

Single item found under deceasedDateTime field.

In a JSON Patch request the path should be /deceasedDateTime.

When adding or updating the deceased date time, the update should be in the format yyyy-mm-ddTHH:MM:SS+HH:MM.

There are a number of business rules that should be taken into account:

cannot be removed.
cannot be a date in the future.
cannot be before the birth date.
cannot be replaced if the death notification status is 2 (formal).
when adding date of death, a death notification status must also be added.
Death notification

Single item found under extension with the extension URL https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus.

In a JSON Patch request the path should be:

/extension/0 if the death notification is the first item in the list. If it is the second item in the list the path is /extension/1, and so on.
/extension/- when adding a death notification.

You can find examples of the above requests in our sandbox Postman collection

There are a number of business rules that should be taken into account:

cannot be removed.
cannot be replaced if the death notification status is formal (2).
only certain endpoints can set a death notification of formal (2).
when adding a death notification, a deceased date time must also be added.
Emergency contact

List item found under contact field.

In a JSON Patch request the path should be:

/contact/0 if the contact to be replaced or removed is the first item in the list. If it is the second item in the list the path is /contact/1, and so on.
/contact/- when adding a new contact.

Only emergency contact details should be added to contact, regular telecommunication methods such as home phone should be added to the telecom field. Any other contact relationship types are rejected.

There are a number of business rules that should be taken into account:

in any telecom child object the use key should not be present.
in any telecom child object the system cannot be fax.
the date period is optional; where present they must be valid dates and the end date cannot be before the start date.
the period start date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.
the date period, if present, should be on the parent contact object and not any telecom child objects.
if the system is email, the value must be a valid email format, for example john.smith@nhs.net; and must be more than 6 characters and less than 90 characters
the relationship can only be C meaning Emergency Contact
Gender

Single item found under gender field.

In a JSON Patch request the path should be /gender.

When setting a gender, the local system should encourage the user to select male or female rather than unknown. The fourth value of gender, other, meaning indeterminate; i.e. unable to be classified as either male or female; should never pro-actively be set by local systems - although this value can be retrieved due to legacy data or data quality issues.

There are a number of business rules that should be taken into account:

cannot be removed.
can only be male, female or unknown.
cannot set gender to other.
General practice

List item found under generalPractitioner field. Although only a single general practice is allowed.

In a JSON Patch request the path should be:

/generalPractitioner/0 for replacing or removing the general practice.
/generalPractitioner/- when adding a new general practice.

There are a number of business rules that should be taken into account:

only valid GP Practice codes may be used, see Organisation Data Service FHIR API for more details on valid codes.
the period start date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.
do not provide a period end date.
the general practice should only be updated by primary care systems, NHAIS or by the National Back Office.
removal of a general practice can only be done by NHAIS or by the National Back Office.
only a single general practice is supported; emergency, temporary and additional practices must be maintained in the local system only.
Managing Organisation (internal-use only)

Single item found under managingOrganization field.

In a JSON Patch request the path should be /managingOrganization.

The following business rules should be observed:

only valid GP Practice codes may be used, see Organisation Data Service FHIR API for more details on valid codes.
the period start date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.
only a single general practice is supported; emergency, temporary and additional practices must be maintained in the local system only.
Multiple birth order

Single item found under multipleBirthInteger field.

In a JSON Patch request the path should be /multipleBirthInteger.

When adding or updating the birth order, the update should be an integer in the range 1 - 9 inclusive. These values have differing meanings:

1 - 7 indicates the order of birth, with 1 indicating the first or only birth in the sequence, 2 indicating the second birth in the sequence, 3 indicating the third, and so on up to 7.
8 - Not applicable
9 - Not known
Name

List item found under name field.

In a JSON Patch request the path should be:

/name/0 if the name to be replaced or removed is the first item in the list. If it is the second item in the list the path is /name/1, and so on.
/name/- when adding a new name.

There are a number of business rules that should be taken into account:

cannot add more than one usual name.
cannot remove the usual name.
cannot add more than one nickname.
can have multiple instances of all other name use types.
cannot replace the use type on an existing name. For example, once a name is a nickname, it cannot be changed directly to an alias. You must instead remove the nickname and add the alias.
the first character of each suffix item must be A-Z.
the date period is optional; where present they must be valid dates and the end date cannot be before the start date.
the period start date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.
supplied name data must be UTF-8 encodable.
the period is optional, but if included the end date cannot be before the start date. They can however be in the past, present or future.
the full available range of generally recognised titles are permitted, however, if any of the following are used then the value input must conform to the following format:
Mr
Mrs
Ms
Dr
Rev
Sir
Lady
Lord
any trailing full stops at the end of a prefix are automatically removed; for example Mrs. changes to Mrs.
Pharmacy

Single item found under extension with one of the extension urls:

https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NominatedPharmacy
https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-MedicalApplianceSupplier
https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-PreferredDispenserOrganization

In a JSON Patch request the path should be:

/extension/0 if the pharmacy is the first item in the list. If it is the second item in the list the path is /extension/1, and so on
/extension/- when adding a pharmacy

There are a number of business rules that should be taken into account:

multiple pharmacies are allowed, however only one of each type
there are no effective date periods, only a single current instance of each type is supported
only valid National Pharmacy codes may be used for the pharmacy identifier, see Organisation Data Service FHIR API for more details on valid codes
Place of birth

Single item found under extension with the extension URL http://hl7.org/fhir/StructureDefinition/patient-birthPlace.

In a JSON Patch request the path should be:

/extension/0 if the place of birth is the first item in the list. If it is the second item in the list the path is /extension/1, and so on
/extension/- when adding a place of birth

There are a number of business rules that should be taken into account:

the three fields, city, district and country are all optional, however at least one of them must be provided
country is a coded value and must be in the set of valid values
Telecom

List item found under telecom field.

In a JSON Patch request the path should be:

/telecom/0 if the telecom to be replaced or removed is the first item in the list. If it is the second item in the list the path is /telecom/1, and so on
/telecom/- when adding a new telecom

Emergency contact details should not be added to the telecom field, instead they should be added to the contact field.

There are a number of business rules that should be taken into account:

the date period is optional; where present they must be valid dates and the end date cannot be before the start date
the period start date is optional, however if provided cannot be a future date. If it is not provided it defaults to the date of update.
if the telecom system is email, the value must be a valid email format, for example john.smith@nhs.net; and must be more than 6 characters and less than 90 characters
Sandbox test scenarios

You can test the following scenarios in our sandbox environment.

Things to note when using the sandbox for PATCH:

Your changes are not persisted.
JSON Patch operations themselves are validated, but the resulting resource is not validated for correctness; meaning any business rules are not applied.
You can use the patient with minimal data, 9000000033 to test adding all data types (as most of them are missing on this patient), that would normally be present (e.g. gender).
Scenario	Request	Response
Successful update	id=9000000009

Body: One of the provided examples or your own combination of patches

Headers: If-Match=W/"2", Content-Type=application/json-patch+json	HTTP Status 200 with updated patient resource.
Patient does not exist	id=9111231130 (or any other valid NHS number)	HTTP Status 404 with problem description
Invalid NHS number	id=9000000000 (or any invalid NHS number)	HTTP Status 400 with problem description
Missing resource version identifier	If-Match header missing or set to format other than W/"<version>"	HTTP Status 412 with problem description
Incorrect resource version	If-Match=W/"1"	HTTP Status 412 with problem description
Wrong content type	Content-Type header missing or other than application/json-patch+json	HTTP Status 400 with problem description
No patches sent	Send body with no patches attribute	HTTP Status 400 with problem description
Invalid patch operations	Send body with invalid JSON patches in patches attribute	HTTP Status 400 with problem description
Missing X-Request-ID	id=9000000009 (or any other valid NHS number)	HTTP Status 412 with problem description

You can try out the sandbox using the 'Try this API' feature on this page.

Alternatively, you can try out the sandbox using our Postman collection:

Request
Path parameters
Name	Description
id	

String

The patient's NHS number. The primary identifier of a patient, unique within NHS England and Wales. Always 10 digits and must be a valid NHS number.

Example: 9000000009

Required
Headers
Name	Description
Authorization	

String (^Bearer\ [[:ascii:]]+$)

An OAuth 2.0 bearer token.

Required in all environments except sandbox.

Example: Bearer g1112R_ccQ1Ebbb4gtHBP1aaaNM


NHSD-Session-URID	

String

The user role ID (URID) for the current session. Also known as a user role profile ID (URPID).

This header is optional.

In Application-restricted access mode this header is ignored.

In Healthcare worker access mode if you send this header it must be valid for the logged-in user. See determine the user's role for guidance.

Pattern: /^[0-9]+$/

Example: 555254240100


X-Request-ID	

String

A globally unique identifier (GUID) for the request, which we use to de-duplicate repeated requests and to trace the request if you contact our helpdesk.

Must be a universally unique identifier (UUID) (ideally version 4).

Mirrored back in a response header.

If you re-send a failed request, use the same value in this header.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068


X-Correlation-ID	

String

An optional ID which you can use to track transactions across multiple systems. It can take any value, but we recommend avoiding . characters.

Mirrored back in a response header.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA


If-Match	

String

Latest known version identifier enclosed in quotes preceded by W/.

Send the value of the patient's ETag response header on patient retrieval when updating a patient. This is to ensure that any updates are applied against an up-to-date version of the patient resource.

Pattern: /^W\/"[0-9]+"$/

Example: W/"2"

Required

Content-Type	

String

For a PATCH request, this must be set to application/json-patch+json.

Example: application/json-patch+json

Required
Body
Required

Content type: application/json-patch+json

Examples

Add a new single item (deceasedDateTime) to the patient

Copy
{
  "patches" : [ {
    "op" : "add",
    "path" : "/deceasedDateTime",
    "value" : "2010-10-22T00:00:00+00:00"
  } ]
}

Add a new list item (name) to the patient

Copy
{
  "patches" : [ {
    "op" : "add",
    "path" : "/name/-",
    "value" : {
      "use" : "usual",
      "period" : {
        "start" : "2019-12-31"
      },
      "prefix" : [ "Dr" ],
      "given" : [ "Joe", "Horation", "Maximus" ],
      "family" : "Bloggs",
      "suffix" : [ "PhD" ]
    }
  } ]
}

Add a an extension (nominated pharmacy) to the Patient

Copy
{
  "patches" : [ {
    "op" : "add",
    "path" : "/extension/-",
    "value" : {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NominatedPharmacy",
      "valueReference" : {
        "identifier" : {
          "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
          "value" : "Y12345",
          "period" : {
            "start" : "2020-01-01",
            "end" : "2021-12-31"
          }
        }
      }
    }
  } ]
}

Update the simple item (gender)

Copy
{
  "patches" : [ {
    "op" : "replace",
    "path" : "/gender",
    "value" : "male"
  } ]
}

Update specific fields on a list item (address)

Copy
{
  "patches" : [ {
    "op" : "replace",
    "path" : "/address/0/line/0",
    "value" : "2 Whitehall Quay"
  }, {
    "op" : "replace",
    "path" : "/address/0/postalCode",
    "value" : "LS1 4BU"
  } ]
}

Update whole object on a list item (address)

Copy
{
  "patches" : [ {
    "op" : "replace",
    "path" : "/address/0",
    "value" : {
      "id" : "456",
      "period" : {
        "start" : "2020-01-01",
        "end" : "2021-12-31"
      },
      "use" : "home",
      "line" : [ "2 Whitehall Quay", "Leeds", "West Yorkshire" ],
      "postalCode" : "LS1 4BU",
      "extension" : [ {
        "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-AddressKey",
        "extension" : [ {
          "url" : "type",
          "valueCoding" : {
            "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-AddressKeyType",
            "code" : "PAF"
          }
        }, {
          "url" : "value",
          "valueString" : "9876543"
        } ]
      } ]
    }
  } ]
}

Update an extension (death notification)

Copy
{
  "patches" : [ {
    "op" : "replace",
    "path" : "/extension/3",
    "value" : {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus",
      "extension" : [ {
        "url" : "deathNotificationStatus",
        "valueCodeableConcept" : {
          "coding" : [ {
            "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-DeathNotificationStatus",
            "version" : "1.0.0",
            "code" : "1",
            "display" : "Informal - death notice received via an update from a local NHS Organisation such as GP or Trust"
          } ]
        }
      } ]
    }
  } ]
}

Remove a single item (gender) no longer in use

Copy
{
  "patches" : [ {
    "op" : "remove",
    "path" : "/gender"
  } ]
}

Remove a list item (name) no longer in use, using test pointing to the name items id

Copy
{
  "patches" : [ {
    "op" : "test",
    "path" : "/name/0/id",
    "value" : "123"
  }, {
    "op" : "remove",
    "path" : "/name/0"
  } ]
}

Remove a list item (name) no longer in use, using test pointing to the name object

Copy
{
  "patches" : [ {
    "op" : "test",
    "path" : "/name/0",
    "value" : {
      "id" : "123",
      "use" : "usual",
      "period" : {
        "start" : "2020-01-01",
        "end" : "2021-12-31"
      },
      "given" : [ "Jane" ],
      "family" : "Smith",
      "prefix" : [ "Mrs" ],
      "suffix" : [ "MBE" ]
    }
  }, {
    "op" : "remove",
    "path" : "/name/0"
  } ]
}

Remove an extension (dispensing doctor pharmacy) no longer in use

Copy
{
  "patches" : [ {
    "op" : "test",
    "path" : "/extension/1/url",
    "value" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-PreferredDispenserOrganization"
  }, {
    "op" : "remove",
    "path" : "/extension/1"
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

patches
array
required
	
Response
HTTP status: 200

Patient updated.

Headers
Name	Description
ETag	

String

Record version identifier enclosed in quotes and preceded by 'W/'. For example, W/"2".

Corresponds to meta.versionId attribute in the patient resource body.

When you retrieve a patient resource, you get a version number for the resource (in the ETag response header and in the versionId field in the response). You must then pass the resource's version number in any update request (in the If-Match response header) made for the patient.

Pattern: /^W\/"[0-9]+"$/

Example: W/"2"


X-Correlation-Id	

String

The X-Correlation-ID from the request header, if supplied, mirrored back.

Example: 11C46F5F-CDEF-4865-94B2-0EE0EDCC26DA


X-Request-Id	

String

The X-Request-ID from the request header, if supplied, mirrored back.

Pattern: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/

Example: 60E0B220-8136-4CA5-AE46-1D97EF59D068

Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "Patient",
  "id" : "9000000009",
  "identifier" : [ {
    "system" : "https://fhir.nhs.uk/Id/nhs-number",
    "value" : "9000000009",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSNumberVerificationStatus",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-NHSNumberVerificationStatus",
          "version" : "1.0.0",
          "code" : "01",
          "display" : "Number present and verified"
        } ]
      }
    } ]
  } ],
  "meta" : {
    "versionId" : "2",
    "security" : [ {
      "system" : "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
      "code" : "U",
      "display" : "unrestricted"
    } ]
  },
  "name" : [ {
    "id" : "123",
    "use" : "usual",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "given" : [ "Jane" ],
    "family" : "Smith",
    "prefix" : [ "Mrs" ],
    "suffix" : [ "MBE" ]
  } ],
  "gender" : "female",
  "birthDate" : "2010-10-22",
  "multipleBirthInteger" : 1,
  "deceasedDateTime" : "2010-10-22T00:00:00+00:00",
  "generalPractitioner" : [ {
    "id" : "254406A3",
    "type" : "Organization",
    "identifier" : {
      "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
      "value" : "Y12345",
      "period" : {
        "start" : "2020-01-01",
        "end" : "2021-12-31"
      }
    }
  } ],
  "managingOrganization" : {
    "type" : "Organization",
    "identifier" : {
      "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
      "value" : "Y12345",
      "period" : {
        "start" : "2020-01-01",
        "end" : "2021-12-31"
      }
    }
  },
  "extension" : [ {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NominatedPharmacy",
    "valueReference" : {
      "identifier" : {
        "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
        "value" : "Y12345"
      }
    }
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-PreferredDispenserOrganization",
    "valueReference" : {
      "identifier" : {
        "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
        "value" : "Y23456"
      }
    }
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-MedicalApplianceSupplier",
    "valueReference" : {
      "identifier" : {
        "system" : "https://fhir.nhs.uk/Id/ods-organization-code",
        "value" : "Y34567"
      }
    }
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-DeathNotificationStatus",
    "extension" : [ {
      "url" : "deathNotificationStatus",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-DeathNotificationStatus",
          "version" : "1.0.0",
          "code" : "2",
          "display" : "Formal - death notice received from Registrar of Deaths"
        } ]
      }
    }, {
      "url" : "systemEffectiveDate",
      "valueDateTime" : "2010-10-22T00:00:00+00:00"
    } ]
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-NHSCommunication",
    "extension" : [ {
      "url" : "language",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-HumanLanguage",
          "version" : "1.0.0",
          "code" : "fr",
          "display" : "French"
        } ]
      }
    }, {
      "url" : "interpreterRequired",
      "valueBoolean" : true
    } ]
  }, {
    "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-ContactPreference",
    "extension" : [ {
      "url" : "PreferredWrittenCommunicationFormat",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-PreferredWrittenCommunicationFormat",
          "code" : "12",
          "display" : "Braille"
        } ]
      }
    }, {
      "url" : "PreferredContactMethod",
      "valueCodeableConcept" : {
        "coding" : [ {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-PreferredContactMethod",
          "code" : "1",
          "display" : "Letter"
        } ]
      }
    }, {
      "url" : "PreferredContactTimes",
      "valueString" : "Not after 7pm"
    } ]
  }, {
    "url" : "http://hl7.org/fhir/StructureDefinition/patient-birthPlace",
    "valueAddress" : {
      "city" : "Manchester",
      "district" : "Greater Manchester",
      "country" : "GBR"
    }
  } ],
  "telecom" : [ {
    "id" : "789",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "system" : "phone",
    "value" : "01632960587",
    "use" : "home"
  }, {
    "id" : "OC789",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "system" : "other",
    "value" : "01632960587",
    "use" : "home",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-OtherContactSystem",
      "valueCoding" : {
        "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-OtherContactSystem",
        "code" : "textphone",
        "display" : "Minicom (Textphone)"
      }
    } ]
  } ],
  "contact" : [ {
    "id" : "C123",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "relationship" : [ {
      "coding" : [ {
        "system" : "http://terminology.hl7.org/CodeSystem/v2-0131",
        "code" : "C",
        "display" : "Emergency Contact"
      } ]
    } ],
    "telecom" : [ {
      "system" : "phone",
      "value" : "01632960587"
    } ]
  } ],
  "address" : [ {
    "id" : "456",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "use" : "home",
    "line" : [ "1 Trevelyan Square", "Boar Lane", "City Centre", "Leeds", "West Yorkshire" ],
    "postalCode" : "LS1 6AE",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-AddressKey",
      "extension" : [ {
        "url" : "type",
        "valueCoding" : {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-AddressKeyType",
          "code" : "PAF"
        }
      }, {
        "url" : "value",
        "valueString" : "12345678"
      } ]
    } ]
  }, {
    "id" : "T456",
    "period" : {
      "start" : "2020-01-01",
      "end" : "2021-12-31"
    },
    "use" : "temp",
    "text" : "Student Accommodation",
    "line" : [ "1 Trevelyan Square", "Boar Lane", "City Centre", "Leeds", "West Yorkshire" ],
    "postalCode" : "LS1 6AE",
    "extension" : [ {
      "url" : "https://fhir.hl7.org.uk/StructureDefinition/Extension-UKCore-AddressKey",
      "extension" : [ {
        "url" : "type",
        "valueCoding" : {
          "system" : "https://fhir.hl7.org.uk/CodeSystem/UKCore-AddressKeyType",
          "code" : "PAF"
        }
      }, {
        "url" : "value",
        "valueString" : "12345678"
      } ]
    } ]
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

resourceType
string
	

FHIR resource type.

Default: Patient


id
string
required
	

The patient's NHS number. The primary identifier of a patient, unique within NHS England and Wales. Always 10 digits and must be a valid NHS number.

Pattern: ^\d{10}$
Example: 9000000009


identifier
array
	

Identifier and system of identification used for this Patient.



meta
object
	

Metadata about this resource.



name
array
	

List of names associated with the patient.

When a patient tagged as very restricted is retrieved, all names are removed from the response.

Min items: 1


gender
string
	

Classification of the gender of a patient. The classification is phenotypical rather than genotypical, i.e. it does not provide codes for medical or scientific purposes. It is the administrative gender that the patient wishes to be known as. In some cases, this may not be the same as the patient’s registered birth gender, or their current clinical gender.

Allowed values: male, female, other, unknown


birthDate
string date
	

The date on which the patient was born or is officially deemed to have been born.

It is a date in the format yyyy-mm-dd. Due to data quality issues on a small number of patients yyyy-mm and yyyy format may also be returned.

When a patient tagged as very restricted is retrieved, birth date is removed from the response.

Example: 2010-10-22


multipleBirthInteger
integer
	

The order in which the patient was born, with 1 indicating the first or only birth in the sequence, 2 indicating the second birth in the sequence, 3 indicating the third, and so on up to 7.

There are two other valid values; 8 meaning Not applicable and 9 meaning Not known.

Maximum: 9 (inclusive)
Minimum: 1 (inclusive)
Example: 1


deceasedDateTime
string date-time
	

The date and time on which a person died or is officially deemed to have died, if applicable and known.

It is a datetime in the format yyyy-mm-ddTHH:MM:SS+HH:MM or yyyy-mm-dd. Due to data quality issues on a small number of patients yyyy-mm and yyyy format may also be returned.

When a patient tagged as very restricted is retrieved, death date is removed from the response.

Pattern: ^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])T\d{2}:\d{2}:\d{2}\+\d{2}:\d{2})$|^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])T\d{2}:\d{2}:\d{2})$|^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])T\d{2}:\d{2}:\d{2}\+\d{2}:\d{2})$|^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))$
Example: 2010-10-22T00:00Z


address
array
	

List of addresses associated with the patient.

These are fully populated on a retrieval or a successful update, only the home address is returned on a search. When a patient tagged as restricted or very restricted is retrieved, all addresses are removed from the response.



telecom
array
	

List of contact points for the patient; for example, phone numbers or email addresses. When a patient tagged as restricted or very restricted is retrieved, all contact points are removed from the response.



contact
array
	

A list of patient contacts. Only emergency contacts are returned and only emergency contacts should be added. Any other contacts should be added to the patients Related Person. Patients designate here any contact number they desire to be used in case of an emergency. Note, while a patient may also desire to record various related persons telecom details, these do not separately allow for a concept of emergency contact; only ranking. See RelatedPerson endpoint. When a patient tagged as restricted or very restricted is retrieved, all contacts are removed from the response.



generalPractitioner
array
	

General Practice (not practitioner) with which the patient is, or was, registered. Always contains zero or one general practitioner object. When a patient tagged as restricted or very restricted is retrieved, the General Practice is removed from the response.

Max items: 1


managingOrganization
object
	

The managing organization of a de-registered patient.



extension
array
	

Wrapper array for the patient's pharmacies, death notification status, communication details, contact preferences and place of birth; these are all FHIR extensions. Always contains zero or one of each pharmacy object, zero or one death notification status object, zero or one communication details object, zero or one contact preference and zero or one place of birth object. When a patient tagged as restricted or very restricted is retrieved, the pharmacy and birth place extensions are removed from the response.

HTTP status: 503

The request timed out during processing. This does not imply the request has failed or been rejected. Error code: SERVICE_UNAVAILABLE.

Re-send the request after the time specified in the Retry-After header using the same X-Request-ID value.

Headers
Name	Description
RetryAfter	

String

Time to wait between polls in seconds

Example: "5"

Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "OperationOutcome",
  "issue" : [ {
    "severity" : "error",
    "code" : "timeout",
    "details" : {
      "coding" : [ {
        "system" : "https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode",
        "version" : "1",
        "code" : "SERVICE_UNAVAILABLE",
        "display" : "Service unavailable"
      } ]
    },
    "diagnostics" : "The downstream domain processing has not completed within the configured timeout period. Using the same 'X-Request-ID' header, retry your request after the time specified by the 'Retry-After' response header."
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

Outcome of an operation that does not result in a resource or bundle being returned, for example an error or an async/batch submission. There are a number of possible error codes that can be returned along with a more detailed description in the display field.



resourceType
string
	

FHIR Resource Type.

Default: OperationOutcome


issue
array
	

List of issues that have occurred.

Min items: 1
HTTP status: 4XX

An error occurred as follows:

HTTP status	Error code	Description
400	UNSUPPORTED_SERVICE	Missing NHS number.
400	MISSING_VALUE	Missing header parameter. For details, see the diagnostics field.
400	INVALID_VALUE	Invalid header parameter or invalid value in body of patch request. For details, see the diagnostics field.
400	INVALID_UPDATE	Malformed patch request or client error after the patch was accepted and patient was not updated. For example, a start date was after the corresponding end date.
400	INVALID_RESOURCE_ID	Invalid NHS number.
400	VALIDATION_ERROR	This is the "default" error thrown when no others are applicable.
400	UNSUPPORTED_CHARACTERS_IN_FIELD	Invalid value in body of patch request. For details, see the diagnostics field.
400	ADDITIONAL_PROPERTIES	The user sent additional properties within the dictionary. For example sending a patient patch and attempting to add 'pets', which is not an allowed field within the patient resource.
400	UNSUPPORTED_VALUE	There was an unsupported value in the request. The value may be valid in the schema - however it could be a legacy value that we do not allow to be set anymore. For example - setting the death notification status to 'removed'. The invalid value and field will be presented in the display.
400	TOO_FEW_VALUES_SUBMITTED	The field in question has a minimum number of items and the user sent too few.
400	TOO_MANY_VALUES_SUBMITTED	The field in question has a maximum number of items and the user sent too many.
401	ACCESS_DENIED	Access token missing, invalid or expired, or calling application not configured for this operation.
403	FORBIDDEN_UPDATE	The user is not permitted to update certain resources or elements, for example most users are not allowed to update the date of death once it has been set. A detailed description will be added to the display. For example - updating a sensitive patient or adding a formal death notification is only permitted from certain systems.
403	ACCESS_DENIED	Patient cannot perform this action.
404	RESOURCE_NOT_FOUND	Patient does not exist for given NHS number.
404	INVALIDATED_RESOURCE	Patient record for given NHS number has been invalidated and not superseded by another NHS number.
408	UNABLE_TO_CALL_SERVICE	The downstream domain processing has not completed within the configured timeout period.
409	RESOURCE_VERSION_MISMATCH	The resource version in the If-Match header of the update request did not match the current version of the resource. See Patient resource versioning.
412	PRECONDITION_FAILED	Problem with request, for example missing If-Match header. For details, see the diagnostics field.
429	TOO_MANY_REQUESTS	You have exceeded your application's rate limit.
Body

Content type: application/fhir+json

Example

Copy
{
  "resourceType" : "OperationOutcome",
  "issue" : [ {
    "severity" : "error",
    "code" : "structure",
    "details" : {
      "coding" : [ {
        "system" : "https://fhir.nhs.uk/R4/CodeSystem/Spine-ErrorOrWarningCode",
        "version" : "1",
        "code" : "INVALID_UPDATE",
        "display" : "Update is invalid"
      } ]
    },
    "diagnostics" : "Invalid update with error - Update unsupported for resource - 'pets'"
  } ]
}
Schema
Collapse all Expand all
Name	Description

object
	

Outcome of an operation that does not result in a resource or bundle being returned, for example an error or an async/batch submission. There are a number of possible error codes that can be returned along with a more detailed description in the display field.



resourceType
string
	

FHIR Resource Type.

Default: OperationOutcome


issue
array
	

List of issues that have occurred.

Min items: 1